app:
  name: "department-service-api"
  port: 8080
  version: "1.0.0"
  env: "dev"

auth:
  serviceId: "my-service"
  clientId: "my-client"
  clientSecret: "${CLIENT_SECRET}"
  keycloakUrl: "http://auth-service:8080"
  realm: "my-realm"
  cacheEnabled: true
  cacheUrl: "redis:6379"
  resources:
  # Department Endpoints
    - path: "/api/v1/departments"
      method: "GET"
      roles: ["admin", "user"]
      actions: ["read:departments"]
    - path: "/api/v1/departments"
      method: "POST"
      roles: ["admin"]
      actions: ["create:departments"]
    - path: "/api/v1/departments/:id"
      method: "GET"
      roles: ["ADMIN", "ORG_ADMIN", "USER"]
      actions: ["read:departments"]
  publicPaths:
    - path: "/api/v1/departments"
      method: "POST"
    - path: "/health"
      method: "GET"
    - path: "/api/v1/departments"
      method: "GET"  
    - path: "/api/v1/departments/*"
      method: "GET"

# TODO: To be updated
# auth:
#   serviceId: "my-service"
#   clientId: "my-client"
#   clientSecret: "${CLIENT_SECRET}"
#   authServiceUrl: "http://auth-service:8080"  # Auth service endpoint instead of Keycloak
#   cacheEnabled: true
#   cacheUrl: "redis:6379"
#   resources:
#     - path: "/api/v1/users"
#       method: "GET"
#       roles: ["admin", "user"]
#       actions: ["read:users"]
#     - path: "/api/v1/users"
#       method: "POST"
#       roles: ["admin"]
#       actions: ["create:users"]

database:
  host: "127.0.0.1"
  port: 5432
  user: "postgres"
  password: "postgres"
  dbname: "department"
  sslmode: "disable"
  max_conns: 10
  timeout: 30

logging:
  level: "info"
  format: "json"